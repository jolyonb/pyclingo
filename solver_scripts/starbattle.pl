% Starbattle puzzle solver by ASPuzzle
% Generated by pyclingo on 2025-05-27 09:43:35
#const star_count = 1.

% ===== Grid =====

% Define cells in the grid
cell(R, C) :- R = 1..5, C = 1..5.

% Define major lines in the grid
line("e", R, cell(R, C)) :- cell(R, C), R = 1..5.
line("s", C, cell(R, C)) :- cell(R, C), C = 1..5.

% Define directions in the grid
direction("n", cell(-1, 0)).
direction("ne", cell(-1, 1)).
direction("e", cell(0, 1)).
direction("se", cell(1, 1)).
direction("s", cell(1, 0)).
direction("sw", cell(1, -1)).
direction("w", cell(0, -1)).
direction("nw", cell(-1, -1)).

% Vertex-sharing adjacency definition
vertex_sharing(cell(R, C), cell(R + R_vec, C + C_vec)) :- cell(R, C), direction(_, cell(R_vec, C_vec)), cell(R + R_vec, C + C_vec).

% ===== Regions =====

region(cell(1, 1), 1).
region(cell(1, 2), 1).
region(cell(1, 3), 2).
region(cell(1, 4), 2).
region(cell(1, 5), 2).
region(cell(2, 1), 3).
region(cell(2, 2), 1).
region(cell(2, 3), 1).
region(cell(2, 4), 1).
region(cell(2, 5), 4).
region(cell(3, 1), 3).
region(cell(3, 2), 3).
region(cell(3, 3), 3).
region(cell(3, 4), 4).
region(cell(3, 5), 4).
region(cell(4, 1), 5).
region(cell(4, 2), 5).
region(cell(4, 3), 5).
region(cell(4, 4), 4).
region(cell(4, 5), 4).
region(cell(5, 1), 5).
region(cell(5, 2), 5).
region(cell(5, 3), 5).
region(cell(5, 4), 5).
region(cell(5, 5), 5).

% ===== Symbols =====

% Place symbols in the grid
0 { star(cell(R, C)) } 1 :- cell(R, C).

% ===== Rules =====

% Star placement rules
Count = star_count :- line(Dir, N, _), Count = #count{cell(R, C) : star(cell(R, C)), line(Dir, N, cell(R, C))}.
Count = star_count :- region(_, N), Count = #count{cell(R, C) : star(cell(R, C)), region(cell(R, C), N)}.

% Star adjacency constraints
:- star(cell(R, C)), star(cell(R_adj, C_adj)), vertex_sharing(cell(R, C), cell(R_adj, C_adj)).

#show.
#show star/1.
